//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34209
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace UserClientViewModel.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Graphic", Namespace="http://schemas.datacontract.org/2004/07/ACUServer")]
    [System.SerializableAttribute()]
    public partial class Graphic : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UserClientViewModel.ServiceReference1.Pipe[] CombinPipesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UserClientViewModel.ServiceReference1.OPCPxoryModel[] OPCProxysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UserClientViewModel.ServiceReference1.PipeSite[] PipeSitesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UserClientViewModel.ServiceReference1.Pipe[] PipesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UserClientViewModel.ServiceReference1.SCADAConfig SCADAConfigManagerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UserClientViewModel.ServiceReference1.Pipe[] CombinPipes {
            get {
                return this.CombinPipesField;
            }
            set {
                if ((object.ReferenceEquals(this.CombinPipesField, value) != true)) {
                    this.CombinPipesField = value;
                    this.RaisePropertyChanged("CombinPipes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UserClientViewModel.ServiceReference1.OPCPxoryModel[] OPCProxys {
            get {
                return this.OPCProxysField;
            }
            set {
                if ((object.ReferenceEquals(this.OPCProxysField, value) != true)) {
                    this.OPCProxysField = value;
                    this.RaisePropertyChanged("OPCProxys");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UserClientViewModel.ServiceReference1.PipeSite[] PipeSites {
            get {
                return this.PipeSitesField;
            }
            set {
                if ((object.ReferenceEquals(this.PipeSitesField, value) != true)) {
                    this.PipeSitesField = value;
                    this.RaisePropertyChanged("PipeSites");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UserClientViewModel.ServiceReference1.Pipe[] Pipes {
            get {
                return this.PipesField;
            }
            set {
                if ((object.ReferenceEquals(this.PipesField, value) != true)) {
                    this.PipesField = value;
                    this.RaisePropertyChanged("Pipes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UserClientViewModel.ServiceReference1.SCADAConfig SCADAConfigManager {
            get {
                return this.SCADAConfigManagerField;
            }
            set {
                if ((object.ReferenceEquals(this.SCADAConfigManagerField, value) != true)) {
                    this.SCADAConfigManagerField = value;
                    this.RaisePropertyChanged("SCADAConfigManager");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SCADAConfig", Namespace="http://schemas.datacontract.org/2004/07/ACUServer")]
    [System.SerializableAttribute()]
    public partial class SCADAConfig : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint ModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReadReqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SCADAServerIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UserClientViewModel.ServiceReference1.SCADASite[] SCADASitesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserPwdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint Mode {
            get {
                return this.ModeField;
            }
            set {
                if ((this.ModeField.Equals(value) != true)) {
                    this.ModeField = value;
                    this.RaisePropertyChanged("Mode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReadReq {
            get {
                return this.ReadReqField;
            }
            set {
                if ((this.ReadReqField.Equals(value) != true)) {
                    this.ReadReqField = value;
                    this.RaisePropertyChanged("ReadReq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SCADAServerIP {
            get {
                return this.SCADAServerIPField;
            }
            set {
                if ((object.ReferenceEquals(this.SCADAServerIPField, value) != true)) {
                    this.SCADAServerIPField = value;
                    this.RaisePropertyChanged("SCADAServerIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UserClientViewModel.ServiceReference1.SCADASite[] SCADASites {
            get {
                return this.SCADASitesField;
            }
            set {
                if ((object.ReferenceEquals(this.SCADASitesField, value) != true)) {
                    this.SCADASitesField = value;
                    this.RaisePropertyChanged("SCADASites");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserPwd {
            get {
                return this.UserPwdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserPwdField, value) != true)) {
                    this.UserPwdField = value;
                    this.RaisePropertyChanged("UserPwd");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Pipe", Namespace="http://schemas.datacontract.org/2004/07/ACUServer")]
    [System.SerializableAttribute()]
    public partial class Pipe : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PipeIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PipeLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PipeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UserClientViewModel.ServiceReference1.Segment[] SegmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Speed0Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Speed1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TimeThresholdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PipeIndex {
            get {
                return this.PipeIndexField;
            }
            set {
                if ((this.PipeIndexField.Equals(value) != true)) {
                    this.PipeIndexField = value;
                    this.RaisePropertyChanged("PipeIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PipeLength {
            get {
                return this.PipeLengthField;
            }
            set {
                if ((this.PipeLengthField.Equals(value) != true)) {
                    this.PipeLengthField = value;
                    this.RaisePropertyChanged("PipeLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PipeName {
            get {
                return this.PipeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PipeNameField, value) != true)) {
                    this.PipeNameField = value;
                    this.RaisePropertyChanged("PipeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UserClientViewModel.ServiceReference1.Segment[] Segments {
            get {
                return this.SegmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.SegmentsField, value) != true)) {
                    this.SegmentsField = value;
                    this.RaisePropertyChanged("Segments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Speed0 {
            get {
                return this.Speed0Field;
            }
            set {
                if ((this.Speed0Field.Equals(value) != true)) {
                    this.Speed0Field = value;
                    this.RaisePropertyChanged("Speed0");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Speed1 {
            get {
                return this.Speed1Field;
            }
            set {
                if ((this.Speed1Field.Equals(value) != true)) {
                    this.Speed1Field = value;
                    this.RaisePropertyChanged("Speed1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TimeThreshold {
            get {
                return this.TimeThresholdField;
            }
            set {
                if ((this.TimeThresholdField.Equals(value) != true)) {
                    this.TimeThresholdField = value;
                    this.RaisePropertyChanged("TimeThreshold");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OPCPxoryModel", Namespace="http://schemas.datacontract.org/2004/07/ACUServer")]
    [System.SerializableAttribute()]
    public partial class OPCPxoryModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLinkedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SignField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUID {
            get {
                return this.GUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIDField, value) != true)) {
                    this.GUIDField = value;
                    this.RaisePropertyChanged("GUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLinked {
            get {
                return this.IsLinkedField;
            }
            set {
                if ((this.IsLinkedField.Equals(value) != true)) {
                    this.IsLinkedField = value;
                    this.RaisePropertyChanged("IsLinked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sign {
            get {
                return this.SignField;
            }
            set {
                if ((object.ReferenceEquals(this.SignField, value) != true)) {
                    this.SignField = value;
                    this.RaisePropertyChanged("Sign");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PipeSite", Namespace="http://schemas.datacontract.org/2004/07/ACUServer")]
    [System.SerializableAttribute()]
    public partial class PipeSite : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DataBufferSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UserClientViewModel.ServiceReference1.PressureSensor[] PreSensorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PressureReqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SamplePerBlockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DataBufferSize {
            get {
                return this.DataBufferSizeField;
            }
            set {
                if ((this.DataBufferSizeField.Equals(value) != true)) {
                    this.DataBufferSizeField = value;
                    this.RaisePropertyChanged("DataBufferSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UserClientViewModel.ServiceReference1.PressureSensor[] PreSensors {
            get {
                return this.PreSensorsField;
            }
            set {
                if ((object.ReferenceEquals(this.PreSensorsField, value) != true)) {
                    this.PreSensorsField = value;
                    this.RaisePropertyChanged("PreSensors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PressureReq {
            get {
                return this.PressureReqField;
            }
            set {
                if ((this.PressureReqField.Equals(value) != true)) {
                    this.PressureReqField = value;
                    this.RaisePropertyChanged("PressureReq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SamplePerBlock {
            get {
                return this.SamplePerBlockField;
            }
            set {
                if ((this.SamplePerBlockField.Equals(value) != true)) {
                    this.SamplePerBlockField = value;
                    this.RaisePropertyChanged("SamplePerBlock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteIndex {
            get {
                return this.SiteIndexField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteIndexField, value) != true)) {
                    this.SiteIndexField = value;
                    this.RaisePropertyChanged("SiteIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteName {
            get {
                return this.SiteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteNameField, value) != true)) {
                    this.SiteNameField = value;
                    this.RaisePropertyChanged("SiteName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Segment", Namespace="http://schemas.datacontract.org/2004/07/ACUServer")]
    [System.SerializableAttribute()]
    public partial class Segment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StrokeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double X1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double X2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Y1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Y2Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Stroke {
            get {
                return this.StrokeField;
            }
            set {
                if ((object.ReferenceEquals(this.StrokeField, value) != true)) {
                    this.StrokeField = value;
                    this.RaisePropertyChanged("Stroke");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double X1 {
            get {
                return this.X1Field;
            }
            set {
                if ((this.X1Field.Equals(value) != true)) {
                    this.X1Field = value;
                    this.RaisePropertyChanged("X1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double X2 {
            get {
                return this.X2Field;
            }
            set {
                if ((this.X2Field.Equals(value) != true)) {
                    this.X2Field = value;
                    this.RaisePropertyChanged("X2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Y1 {
            get {
                return this.Y1Field;
            }
            set {
                if ((this.Y1Field.Equals(value) != true)) {
                    this.Y1Field = value;
                    this.RaisePropertyChanged("Y1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Y2 {
            get {
                return this.Y2Field;
            }
            set {
                if ((this.Y2Field.Equals(value) != true)) {
                    this.Y2Field = value;
                    this.RaisePropertyChanged("Y2");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PressureSensor", Namespace="http://schemas.datacontract.org/2004/07/ACUServer")]
    [System.SerializableAttribute()]
    public partial class PressureSensor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllSendToClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BelongSiteIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLinkedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSaveDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UserClientViewModel.ServiceReference1.pipesegment[] MonitorPipeSegmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OPCPointIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PreSensorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float[] PressureValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float ThreshMaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float ThreshMinField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllSendToClient {
            get {
                return this.AllSendToClientField;
            }
            set {
                if ((this.AllSendToClientField.Equals(value) != true)) {
                    this.AllSendToClientField = value;
                    this.RaisePropertyChanged("AllSendToClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BelongSiteID {
            get {
                return this.BelongSiteIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BelongSiteIDField, value) != true)) {
                    this.BelongSiteIDField = value;
                    this.RaisePropertyChanged("BelongSiteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLinked {
            get {
                return this.IsLinkedField;
            }
            set {
                if ((this.IsLinkedField.Equals(value) != true)) {
                    this.IsLinkedField = value;
                    this.RaisePropertyChanged("IsLinked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSaveData {
            get {
                return this.IsSaveDataField;
            }
            set {
                if ((this.IsSaveDataField.Equals(value) != true)) {
                    this.IsSaveDataField = value;
                    this.RaisePropertyChanged("IsSaveData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UserClientViewModel.ServiceReference1.pipesegment[] MonitorPipeSegments {
            get {
                return this.MonitorPipeSegmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.MonitorPipeSegmentsField, value) != true)) {
                    this.MonitorPipeSegmentsField = value;
                    this.RaisePropertyChanged("MonitorPipeSegments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OPCPointID {
            get {
                return this.OPCPointIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OPCPointIDField, value) != true)) {
                    this.OPCPointIDField = value;
                    this.RaisePropertyChanged("OPCPointID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PreSensorID {
            get {
                return this.PreSensorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PreSensorIDField, value) != true)) {
                    this.PreSensorIDField = value;
                    this.RaisePropertyChanged("PreSensorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float[] PressureValue {
            get {
                return this.PressureValueField;
            }
            set {
                if ((object.ReferenceEquals(this.PressureValueField, value) != true)) {
                    this.PressureValueField = value;
                    this.RaisePropertyChanged("PressureValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float ThreshMax {
            get {
                return this.ThreshMaxField;
            }
            set {
                if ((this.ThreshMaxField.Equals(value) != true)) {
                    this.ThreshMaxField = value;
                    this.RaisePropertyChanged("ThreshMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float ThreshMin {
            get {
                return this.ThreshMinField;
            }
            set {
                if ((this.ThreshMinField.Equals(value) != true)) {
                    this.ThreshMinField = value;
                    this.RaisePropertyChanged("ThreshMin");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="pipesegment", Namespace="http://schemas.datacontract.org/2004/07/ACUServer")]
    [System.SerializableAttribute()]
    public partial class pipesegment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegmentIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SegmentLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SegmentNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegmentIndex {
            get {
                return this.SegmentIndexField;
            }
            set {
                if ((object.ReferenceEquals(this.SegmentIndexField, value) != true)) {
                    this.SegmentIndexField = value;
                    this.RaisePropertyChanged("SegmentIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SegmentLocation {
            get {
                return this.SegmentLocationField;
            }
            set {
                if ((this.SegmentLocationField.Equals(value) != true)) {
                    this.SegmentLocationField = value;
                    this.RaisePropertyChanged("SegmentLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SegmentName {
            get {
                return this.SegmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SegmentNameField, value) != true)) {
                    this.SegmentNameField = value;
                    this.RaisePropertyChanged("SegmentName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SCADASite", Namespace="http://schemas.datacontract.org/2004/07/ACUServer")]
    [System.SerializableAttribute()]
    public partial class SCADASite : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UserClientViewModel.ServiceReference1.SCADAPoint[] PointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SCADASiteIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SCADASiteNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UserClientViewModel.ServiceReference1.SCADAPoint[] Points {
            get {
                return this.PointsField;
            }
            set {
                if ((object.ReferenceEquals(this.PointsField, value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SCADASiteID {
            get {
                return this.SCADASiteIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SCADASiteIDField, value) != true)) {
                    this.SCADASiteIDField = value;
                    this.RaisePropertyChanged("SCADASiteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SCADASiteName {
            get {
                return this.SCADASiteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SCADASiteNameField, value) != true)) {
                    this.SCADASiteNameField = value;
                    this.RaisePropertyChanged("SCADASiteName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SCADAPoint", Namespace="http://schemas.datacontract.org/2004/07/ACUServer")]
    [System.SerializableAttribute()]
    public partial class SCADAPoint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CapacityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DataTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DelaySecondField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] InfluencePipesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFirstReadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PointIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PointNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double UnChangeRageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Capacity {
            get {
                return this.CapacityField;
            }
            set {
                if ((this.CapacityField.Equals(value) != true)) {
                    this.CapacityField = value;
                    this.RaisePropertyChanged("Capacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DataType {
            get {
                return this.DataTypeField;
            }
            set {
                if ((this.DataTypeField.Equals(value) != true)) {
                    this.DataTypeField = value;
                    this.RaisePropertyChanged("DataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DelaySecond {
            get {
                return this.DelaySecondField;
            }
            set {
                if ((this.DelaySecondField.Equals(value) != true)) {
                    this.DelaySecondField = value;
                    this.RaisePropertyChanged("DelaySecond");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] InfluencePipes {
            get {
                return this.InfluencePipesField;
            }
            set {
                if ((object.ReferenceEquals(this.InfluencePipesField, value) != true)) {
                    this.InfluencePipesField = value;
                    this.RaisePropertyChanged("InfluencePipes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFirstRead {
            get {
                return this.IsFirstReadField;
            }
            set {
                if ((this.IsFirstReadField.Equals(value) != true)) {
                    this.IsFirstReadField = value;
                    this.RaisePropertyChanged("IsFirstRead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PointID {
            get {
                return this.PointIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PointIDField, value) != true)) {
                    this.PointIDField = value;
                    this.RaisePropertyChanged("PointID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PointName {
            get {
                return this.PointNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PointNameField, value) != true)) {
                    this.PointNameField = value;
                    this.RaisePropertyChanged("PointName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double UnChangeRage {
            get {
                return this.UnChangeRageField;
            }
            set {
                if ((this.UnChangeRageField.Equals(value) != true)) {
                    this.UnChangeRageField = value;
                    this.RaisePropertyChanged("UnChangeRage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PressureLeak", Namespace="http://schemas.datacontract.org/2004/07/ACUServer")]
    [System.SerializableAttribute()]
    public partial class PressureLeak : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsErrorLeakField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LeakTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PressuresnsorIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiteIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int msField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int sField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsErrorLeak {
            get {
                return this.IsErrorLeakField;
            }
            set {
                if ((this.IsErrorLeakField.Equals(value) != true)) {
                    this.IsErrorLeakField = value;
                    this.RaisePropertyChanged("IsErrorLeak");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LeakTime {
            get {
                return this.LeakTimeField;
            }
            set {
                if ((this.LeakTimeField.Equals(value) != true)) {
                    this.LeakTimeField = value;
                    this.RaisePropertyChanged("LeakTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PressuresnsorIndex {
            get {
                return this.PressuresnsorIndexField;
            }
            set {
                if ((this.PressuresnsorIndexField.Equals(value) != true)) {
                    this.PressuresnsorIndexField = value;
                    this.RaisePropertyChanged("PressuresnsorIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiteIndex {
            get {
                return this.SiteIndexField;
            }
            set {
                if ((this.SiteIndexField.Equals(value) != true)) {
                    this.SiteIndexField = value;
                    this.RaisePropertyChanged("SiteIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteName {
            get {
                return this.SiteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteNameField, value) != true)) {
                    this.SiteNameField = value;
                    this.RaisePropertyChanged("SiteName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ms {
            get {
                return this.msField;
            }
            set {
                if ((this.msField.Equals(value) != true)) {
                    this.msField = value;
                    this.RaisePropertyChanged("ms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int s {
            get {
                return this.sField;
            }
            set {
                if ((this.sField.Equals(value) != true)) {
                    this.sField = value;
                    this.RaisePropertyChanged("s");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DolLocation", Namespace="http://schemas.datacontract.org/2004/07/ACUServer")]
    [System.SerializableAttribute()]
    public partial class DolLocation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinePosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PipeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PipeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RPosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RlinePosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShowTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string YField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinePos {
            get {
                return this.LinePosField;
            }
            set {
                if ((object.ReferenceEquals(this.LinePosField, value) != true)) {
                    this.LinePosField = value;
                    this.RaisePropertyChanged("LinePos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pipe {
            get {
                return this.PipeField;
            }
            set {
                if ((object.ReferenceEquals(this.PipeField, value) != true)) {
                    this.PipeField = value;
                    this.RaisePropertyChanged("Pipe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PipeName {
            get {
                return this.PipeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PipeNameField, value) != true)) {
                    this.PipeNameField = value;
                    this.RaisePropertyChanged("PipeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pos {
            get {
                return this.PosField;
            }
            set {
                if ((object.ReferenceEquals(this.PosField, value) != true)) {
                    this.PosField = value;
                    this.RaisePropertyChanged("Pos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RPos {
            get {
                return this.RPosField;
            }
            set {
                if ((object.ReferenceEquals(this.RPosField, value) != true)) {
                    this.RPosField = value;
                    this.RaisePropertyChanged("RPos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RlinePos {
            get {
                return this.RlinePosField;
            }
            set {
                if ((object.ReferenceEquals(this.RlinePosField, value) != true)) {
                    this.RlinePosField = value;
                    this.RaisePropertyChanged("RlinePos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShowTime {
            get {
                return this.ShowTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShowTimeField, value) != true)) {
                    this.ShowTimeField = value;
                    this.RaisePropertyChanged("ShowTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Time {
            get {
                return this.TimeField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeField, value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string X {
            get {
                return this.XField;
            }
            set {
                if ((object.ReferenceEquals(this.XField, value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Y {
            get {
                return this.YField;
            }
            set {
                if ((object.ReferenceEquals(this.YField, value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Location", Namespace="http://schemas.datacontract.org/2004/07/ACUServer")]
    [System.SerializableAttribute()]
    public partial class Location : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetectedTypestringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndSiteIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndSiteNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UserClientViewModel.ServiceReference1.DetectedType LocateDetectedTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocateGetTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LocateLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MGSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PipeIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartSiteIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartSiteNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetectedTypestring {
            get {
                return this.DetectedTypestringField;
            }
            set {
                if ((object.ReferenceEquals(this.DetectedTypestringField, value) != true)) {
                    this.DetectedTypestringField = value;
                    this.RaisePropertyChanged("DetectedTypestring");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndSiteIndex {
            get {
                return this.EndSiteIndexField;
            }
            set {
                if ((object.ReferenceEquals(this.EndSiteIndexField, value) != true)) {
                    this.EndSiteIndexField = value;
                    this.RaisePropertyChanged("EndSiteIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndSiteName {
            get {
                return this.EndSiteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EndSiteNameField, value) != true)) {
                    this.EndSiteNameField = value;
                    this.RaisePropertyChanged("EndSiteName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UserClientViewModel.ServiceReference1.DetectedType LocateDetectedType {
            get {
                return this.LocateDetectedTypeField;
            }
            set {
                if ((this.LocateDetectedTypeField.Equals(value) != true)) {
                    this.LocateDetectedTypeField = value;
                    this.RaisePropertyChanged("LocateDetectedType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocateGetTime {
            get {
                return this.LocateGetTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocateGetTimeField, value) != true)) {
                    this.LocateGetTimeField = value;
                    this.RaisePropertyChanged("LocateGetTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LocateLength {
            get {
                return this.LocateLengthField;
            }
            set {
                if ((this.LocateLengthField.Equals(value) != true)) {
                    this.LocateLengthField = value;
                    this.RaisePropertyChanged("LocateLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MGS {
            get {
                return this.MGSField;
            }
            set {
                if ((object.ReferenceEquals(this.MGSField, value) != true)) {
                    this.MGSField = value;
                    this.RaisePropertyChanged("MGS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PipeIndex {
            get {
                return this.PipeIndexField;
            }
            set {
                if ((object.ReferenceEquals(this.PipeIndexField, value) != true)) {
                    this.PipeIndexField = value;
                    this.RaisePropertyChanged("PipeIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartSiteIndex {
            get {
                return this.StartSiteIndexField;
            }
            set {
                if ((object.ReferenceEquals(this.StartSiteIndexField, value) != true)) {
                    this.StartSiteIndexField = value;
                    this.RaisePropertyChanged("StartSiteIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartSiteName {
            get {
                return this.StartSiteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StartSiteNameField, value) != true)) {
                    this.StartSiteNameField = value;
                    this.RaisePropertyChanged("StartSiteName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DetectedType", Namespace="http://schemas.datacontract.org/2004/07/ACUServer")]
    public enum DetectedType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        infrasound = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        pressure = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SCADA = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DolPoint", Namespace="http://schemas.datacontract.org/2004/07/ACUServer")]
    [System.SerializableAttribute()]
    public partial class DolPoint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PointIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PointNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PointValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PointID {
            get {
                return this.PointIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PointIDField, value) != true)) {
                    this.PointIDField = value;
                    this.RaisePropertyChanged("PointID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PointName {
            get {
                return this.PointNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PointNameField, value) != true)) {
                    this.PointNameField = value;
                    this.RaisePropertyChanged("PointName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PointValue {
            get {
                return this.PointValueField;
            }
            set {
                if ((object.ReferenceEquals(this.PointValueField, value) != true)) {
                    this.PointValueField = value;
                    this.RaisePropertyChanged("PointValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IUser", CallbackContract=typeof(UserClientViewModel.ServiceReference1.IUserCallback))]
    public interface IUser {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/BeatHeart", ReplyAction="http://tempuri.org/IUser/BeatHeartResponse")]
        void BeatHeart();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/Login", ReplyAction="http://tempuri.org/IUser/LoginResponse")]
        void Login();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetGraphic", ReplyAction="http://tempuri.org/IUser/GetGraphicResponse")]
        UserClientViewModel.ServiceReference1.Graphic GetGraphic();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/SetGraphic", ReplyAction="http://tempuri.org/IUser/SetGraphicResponse")]
        void SetGraphic(UserClientViewModel.ServiceReference1.Graphic gra);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/SetDolPointValue", ReplyAction="http://tempuri.org/IUser/SetDolPointValueResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UserClientViewModel.ServiceReference1.Graphic))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UserClientViewModel.ServiceReference1.Pipe[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UserClientViewModel.ServiceReference1.Pipe))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UserClientViewModel.ServiceReference1.Segment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UserClientViewModel.ServiceReference1.Segment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UserClientViewModel.ServiceReference1.OPCPxoryModel[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UserClientViewModel.ServiceReference1.OPCPxoryModel))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UserClientViewModel.ServiceReference1.PipeSite[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UserClientViewModel.ServiceReference1.PipeSite))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UserClientViewModel.ServiceReference1.PressureSensor[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UserClientViewModel.ServiceReference1.PressureSensor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UserClientViewModel.ServiceReference1.pipesegment[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UserClientViewModel.ServiceReference1.pipesegment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UserClientViewModel.ServiceReference1.SCADAConfig))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UserClientViewModel.ServiceReference1.SCADASite[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UserClientViewModel.ServiceReference1.SCADASite))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UserClientViewModel.ServiceReference1.SCADAPoint[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UserClientViewModel.ServiceReference1.SCADAPoint))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UserClientViewModel.ServiceReference1.PressureLeak))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UserClientViewModel.ServiceReference1.DolLocation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UserClientViewModel.ServiceReference1.Location))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UserClientViewModel.ServiceReference1.DetectedType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UserClientViewModel.ServiceReference1.DolPoint[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(UserClientViewModel.ServiceReference1.DolPoint))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(float[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(double[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, bool>))]
        bool SetDolPointValue(string pointID, object value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/ResetPreSensorThresh", ReplyAction="http://tempuri.org/IUser/ResetPreSensorThreshResponse")]
        bool ResetPreSensorThresh(int PreSensorIndex, float threshMax, float threshMin);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GraphicChanged", ReplyAction="http://tempuri.org/IUser/GraphicChangedResponse")]
        void GraphicChanged(UserClientViewModel.ServiceReference1.Graphic gra);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/PreLeakCallBack", ReplyAction="http://tempuri.org/IUser/PreLeakCallBackResponse")]
        void PreLeakCallBack(UserClientViewModel.ServiceReference1.PressureLeak leak);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/OPCProxyLinkCallBack", ReplyAction="http://tempuri.org/IUser/OPCProxyLinkCallBackResponse")]
        void OPCProxyLinkCallBack(string Guid, bool islink);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/PressureDateCallBack", ReplyAction="http://tempuri.org/IUser/PressureDateCallBackResponse")]
        void PressureDateCallBack(string Key, double[] Datasource);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/PLCPreLinkingCallBack", ReplyAction="http://tempuri.org/IUser/PLCPreLinkingCallBackResponse")]
        void PLCPreLinkingCallBack(System.Collections.Generic.Dictionary<string, bool> PreSensorLinks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/DolLocationCallBack", ReplyAction="http://tempuri.org/IUser/DolLocationCallBackResponse")]
        void DolLocationCallBack(UserClientViewModel.ServiceReference1.DolLocation location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/LocationCallBack", ReplyAction="http://tempuri.org/IUser/LocationCallBackResponse")]
        void LocationCallBack(UserClientViewModel.ServiceReference1.Location location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/PreMaskCallBack", ReplyAction="http://tempuri.org/IUser/PreMaskCallBackResponse")]
        void PreMaskCallBack(string Key, double[] MaskData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/PreThreshCallBack", ReplyAction="http://tempuri.org/IUser/PreThreshCallBackResponse")]
        void PreThreshCallBack(string Key, double[] ThreshData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/CallBackDOLPHINData", ReplyAction="http://tempuri.org/IUser/CallBackDOLPHINDataResponse")]
        void CallBackDOLPHINData(UserClientViewModel.ServiceReference1.DolPoint[] DolPoints);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserChannel : UserClientViewModel.ServiceReference1.IUser, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserClient : System.ServiceModel.DuplexClientBase<UserClientViewModel.ServiceReference1.IUser>, UserClientViewModel.ServiceReference1.IUser {
        
        public UserClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public UserClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public UserClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public UserClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public UserClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void BeatHeart() {
            base.Channel.BeatHeart();
        }
        
        public void Login() {
            base.Channel.Login();
        }
        
        public UserClientViewModel.ServiceReference1.Graphic GetGraphic() {
            return base.Channel.GetGraphic();
        }
        
        public void SetGraphic(UserClientViewModel.ServiceReference1.Graphic gra) {
            base.Channel.SetGraphic(gra);
        }
        
        public bool SetDolPointValue(string pointID, object value) {
            return base.Channel.SetDolPointValue(pointID, value);
        }
        
        public bool ResetPreSensorThresh(int PreSensorIndex, float threshMax, float threshMin) {
            return base.Channel.ResetPreSensorThresh(PreSensorIndex, threshMax, threshMin);
        }
    }
}
