//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34209
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Simulator_ViewModel.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrePoint", Namespace="http://schemas.datacontract.org/2004/07/ACUServer")]
    [System.SerializableAttribute()]
    public partial class PrePoint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GetMSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GetSecField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PointIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PointNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> PointValuesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GetMS {
            get {
                return this.GetMSField;
            }
            set {
                if ((this.GetMSField.Equals(value) != true)) {
                    this.GetMSField = value;
                    this.RaisePropertyChanged("GetMS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GetSec {
            get {
                return this.GetSecField;
            }
            set {
                if ((this.GetSecField.Equals(value) != true)) {
                    this.GetSecField = value;
                    this.RaisePropertyChanged("GetSec");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PointID {
            get {
                return this.PointIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PointIDField, value) != true)) {
                    this.PointIDField = value;
                    this.RaisePropertyChanged("PointID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PointName {
            get {
                return this.PointNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PointNameField, value) != true)) {
                    this.PointNameField = value;
                    this.RaisePropertyChanged("PointName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> PointValues {
            get {
                return this.PointValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.PointValuesField, value) != true)) {
                    this.PointValuesField = value;
                    this.RaisePropertyChanged("PointValues");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DolPoint", Namespace="http://schemas.datacontract.org/2004/07/ACUServer")]
    [System.SerializableAttribute()]
    public partial class DolPoint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PointIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PointNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PointValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PointID {
            get {
                return this.PointIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PointIDField, value) != true)) {
                    this.PointIDField = value;
                    this.RaisePropertyChanged("PointID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PointName {
            get {
                return this.PointNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PointNameField, value) != true)) {
                    this.PointNameField = value;
                    this.RaisePropertyChanged("PointName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PointValue {
            get {
                return this.PointValueField;
            }
            set {
                if ((object.ReferenceEquals(this.PointValueField, value) != true)) {
                    this.PointValueField = value;
                    this.RaisePropertyChanged("PointValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IOPCClientProxy", CallbackContract=typeof(Simulator_ViewModel.ServiceReference1.IOPCClientProxyCallback))]
    public interface IOPCClientProxy {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOPCClientProxy/Login", ReplyAction="http://tempuri.org/IOPCClientProxy/LoginResponse")]
        bool Login(string GUID);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IOPCClientProxy/BeatHeart")]
        void BeatHeart();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOPCClientProxy/SendPLCData", ReplyAction="http://tempuri.org/IOPCClientProxy/SendPLCDataResponse")]
        void SendPLCData(string GUID, System.Collections.Generic.List<Simulator_ViewModel.ServiceReference1.PrePoint> Prepoints);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOPCClientProxy/SendDolPhinData", ReplyAction="http://tempuri.org/IOPCClientProxy/SendDolPhinDataResponse")]
        void SendDolPhinData(string GUID, System.Collections.Generic.List<Simulator_ViewModel.ServiceReference1.DolPoint> DolPoints);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOPCClientProxyCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOPCClientProxy/CallBack1", ReplyAction="http://tempuri.org/IOPCClientProxy/CallBack1Response")]
        void CallBack1();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOPCClientProxyChannel : Simulator_ViewModel.ServiceReference1.IOPCClientProxy, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OPCClientProxyClient : System.ServiceModel.DuplexClientBase<Simulator_ViewModel.ServiceReference1.IOPCClientProxy>, Simulator_ViewModel.ServiceReference1.IOPCClientProxy {
        
        public OPCClientProxyClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public OPCClientProxyClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public OPCClientProxyClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public OPCClientProxyClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public OPCClientProxyClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public bool Login(string GUID) {
            return base.Channel.Login(GUID);
        }
        
        public void BeatHeart() {
            base.Channel.BeatHeart();
        }
        
        public void SendPLCData(string GUID, System.Collections.Generic.List<Simulator_ViewModel.ServiceReference1.PrePoint> Prepoints) {
            base.Channel.SendPLCData(GUID, Prepoints);
        }
        
        public void SendDolPhinData(string GUID, System.Collections.Generic.List<Simulator_ViewModel.ServiceReference1.DolPoint> DolPoints) {
            base.Channel.SendDolPhinData(GUID, DolPoints);
        }
    }
}
